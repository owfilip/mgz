wbuildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
        jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.postgresql:postgresql:9.4.1208")
	}
}

plugins {
    id 'java'
	id 'application'
	id 'nu.studer.jooq' version "2.0.6"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
    jcenter()
}

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

dependencies {
	compile (group: 'org.postgresql', name: 'postgresql', version: '9.4.1208') {
		exclude(group: 'org.slf4j')
	}
    compile('org.flywaydb:flyway-core:4.2.0')
	compile('org.springframework.boot:spring-boot-starter-jooq')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')

    jooqRuntime 'postgresql:postgresql:9.4.1208-jdbc42-atlassian-hosted'

	runtime('org.springframework.boot:spring-boot-devtools')

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

jooq {
	mgz(sourceSets.main) {
		jdbc {
			driver = 'org.postgresql.Driver'
			url = 'jdbc:postgresql://localhost:5432/mgz'
			user = 'postgres'
			password = ''
			schema = 'mgz'
		}
		generator {
			name = 'org.jooq.util.JavaGenerator'
			strategy {
				name = 'org.jooq.util.DefaultGeneratorStrategy'
			}
			database {
				name = 'org.jooq.util.postgres.PostgresDatabase'
				inputSchema = 'public'
			generate {
				relations = true
				deprecated = false
				records = true
				immutablePojos = false
				fluentSetters = true
			}
			target {
				packageName = 'com.project.mgz.models.db'
				directory = 'src/main/java'
			}
		}
	}
}
