/*
 * This file is generated by jOOQ.
*/
package com.project.mgz.models.db.tables;


import com.project.mgz.models.db.Keys;
import com.project.mgz.models.db.Public;
import com.project.mgz.models.db.tables.records.ResourcesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Resources extends TableImpl<ResourcesRecord> {

    private static final long serialVersionUID = 2066945263;

    /**
     * The reference instance of <code>public.resources</code>
     */
    public static final Resources RESOURCES = new Resources();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResourcesRecord> getRecordType() {
        return ResourcesRecord.class;
    }

    /**
     * The column <code>public.resources.id</code>.
     */
    public final TableField<ResourcesRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>public.resources.name</code>.
     */
    public final TableField<ResourcesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.resources.owner</code>.
     */
    public final TableField<ResourcesRecord, String> OWNER = createField("owner", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * Create a <code>public.resources</code> table reference
     */
    public Resources() {
        this("resources", null);
    }

    /**
     * Create an aliased <code>public.resources</code> table reference
     */
    public Resources(String alias) {
        this(alias, RESOURCES);
    }

    private Resources(String alias, Table<ResourcesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Resources(String alias, Table<ResourcesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ResourcesRecord> getPrimaryKey() {
        return Keys.RESOURCES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ResourcesRecord>> getKeys() {
        return Arrays.<UniqueKey<ResourcesRecord>>asList(Keys.RESOURCES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Resources as(String alias) {
        return new Resources(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Resources rename(String name) {
        return new Resources(name, null);
    }
}
