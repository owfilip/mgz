buildscript {
	ext {
		kotlinVersion = '1.1.3'
		springBootVersion = '2.0.0.M2'
	}
	repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
		mavenCentral()
        jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.postgresql:postgresql:9.4.1208")
        classpath 'nu.studer:gradle-jooq-plugin:2.0.6'
	}
}

plugins {
	id 'nu.studer.jooq' version "2.0.6"
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	mavenCentral()
    jcenter()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    compile('org.flywaydb:flyway-core:4.2.0')
	compile('org.postgresql:postgresql:9.4.1208')
	compile('org.springframework.boot:spring-boot-starter-jooq')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

	jooqRuntime 'postgresql:postgresql:9.4.1208-jdbc42-atlassian-hosted'

	runtime('org.springframework.boot:spring-boot-devtools')

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

jooq {
	serveit(sourceSets.main) {
		jdbc {
			driver = 'org.postgresql.Driver'
			url = 'jdbc:postgresql://localhost:5432/mgz'
			user = 'postgres'
			password = ''
			schema = 'mgz'
		}
		generator {
			name = 'org.jooq.util.JavaGenerator'
			strategy {
				name = 'org.jooq.util.DefaultGeneratorStrategy'
			}
			database {
				name = 'org.jooq.util.postgres.PostgresDatabase'
				inputSchema = 'public'
			}
            target {
                packageName = 'com.project.serveit.models'
                directory = 'src/main/kotlin'
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = false
                fluentSetters = true
            }
		}
	}
}